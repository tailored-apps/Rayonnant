<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:control="clr-namespace:TailoredApps.Rayonnant.Presentation.Resources.Control"
    xmlns:view="clr-namespace:TailoredApps.Rayonnant.Presentation.View;assembly=TailoredApps.Rayonnant.Presentation"
    xmlns:converters="clr-namespace:TailoredApps.Rayonnant.Presentation.Converters;assembly=TailoredApps.Rayonnant.Presentation">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/TailoredApps.Rayonnant.Presentation.Resources;component/Styles/IconsSetResourceDictionary.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="closeButtonControlTemplate" TargetType="{x:Type ButtonBase}">

        <ControlTemplate.Resources>
            <Storyboard x:Key="OnMouseDownStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnMouseEnterStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.8" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnMouseLeaveStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>

        <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}"
                    Margin="{Binding MarginButton, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                    Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Content="{TemplateBinding Content}"
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#FFADADAD" />
                <Setter Property="Opacity" TargetName="Chrome" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Style.Resources>
            <Storyboard x:Key="OnMouseDownStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                   Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnMouseEnterStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                   Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.8" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="OnMouseLeaveStoryboard">
                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                   Storyboard.TargetName="{x:Null}">
                    <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </Style.Resources>
        <Setter Property="Background" Value="#00000000" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template" Value="{StaticResource closeButtonControlTemplate}" />
        <Setter Property="Opacity" Value="0.5" />
        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
            <EventTrigger RoutedEvent="Mouse.PreviewMouseDown">
                <BeginStoryboard x:Name="OnMouseDown_BeginStoryboard"
                                     Storyboard="{StaticResource OnMouseDownStoryboard}" />
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard"
                                     Storyboard="{StaticResource OnMouseEnterStoryboard}" />
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard"
                                     Storyboard="{StaticResource OnMouseLeaveStoryboard}" />
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="close">
        <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" FontFamily="Webdings"
                       Foreground="{ DynamicResource FontActiveColorBrush}"
                       FontSize="16" />
    </DataTemplate>

    <ControlTemplate x:Key="PrismViewBaseTemplate" TargetType="{x:Type view:PrismViewBase}">
        <Border Background="{DynamicResource BorderColorBrush}" BorderThickness="0.5">
            <DockPanel LastChildFill="True" Background="{DynamicResource MainWindowBackground}">

                <Grid DockPanel.Dock="Top" Background="{DynamicResource HeaderBar}" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="20"  />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>

                        <Image Grid.Column="0"  Source="{Binding Icon}" HorizontalAlignment="Left"  />
                        <Label Grid.Column="1" Content="{Binding Title}" HorizontalAlignment="Left" Padding="0" Margin="0" VerticalContentAlignment="Center" />
                        <Button Margin="2" Grid.Column="2" VerticalContentAlignment="Center" HorizontalContentAlignment="Right" Style="{StaticResource CloseButtonStyle}" HorizontalAlignment="Right" Command="{TemplateBinding TearOffCommand}" CommandParameter="{TemplateBinding DataContext}" >
                            <Path Style="{StaticResource AppbarFullscreenIconStyle}" Width="13" Height="13"/>
                        </Button>

                        <Button Name="closeCurrentControl" Margin="2" Grid.Column="3"  VerticalContentAlignment="Center" HorizontalContentAlignment="Right" Style="{StaticResource CloseButtonStyle}" HorizontalAlignment="Right" Command="{TemplateBinding CloseItemCommand}"  CommandParameter="{TemplateBinding DataContext}" >
                            <Path Style="{StaticResource AppbarCloseIconStyle}" Width="13" Height="13"/>
                        </Button>
              
                    </Grid>
                </Grid>
                <ContentPresenter  Content="{TemplateBinding Content}" />
            </DockPanel>
        </Border>

    </ControlTemplate>

    <ControlTemplate x:Key="PrismViewBaseTemplateWithoutButtons" TargetType="{x:Type view:PrismViewBase}">
        <Border Background="{DynamicResource MainWindowBackground}">
            <DockPanel LastChildFill="True">

                <ContentPresenter  Content="{TemplateBinding Content}" />
            </DockPanel>
        </Border>

    </ControlTemplate>

    <Style TargetType="{x:Type view:PrismViewBase}">
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Margin" Value="1"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Path=IsTearOff}"  Value="False">
                <Setter Property="Template" Value="{StaticResource PrismViewBaseTemplate}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding BindsDirectlyToSource=True, Path=IsTearOff}" Value="True">
                <Setter Property="Template" Value="{StaticResource PrismViewBaseTemplateWithoutButtons}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>